@model IEnumerable<OnlineStore2.ViewModels.MotorcycleIndexVM>

@{
    ViewBag.Title = "Index";
    // This line was missed and the errors that I was getting was First error: "The type 'Object' is defined in an assembly that is not referenced. You must add a reference to assembly 'assembly'.".
    // Second error: "Predefined type 'System.Object' is not defined or imported".
    // Third error: "The type or namespace name 'IEnumerable<>' could not be found (are you missing a using directive or an assembly reference?)"
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    * {
        box-sizing: border-box;
    }

    .column {
        /*float is the key to make the columns done. Without the flout attribute the output is in horizontal shape but with flout attribute it's in
            vertical shape.
        */
        float: left;
        width: 50%;
        padding: 10px;
        height: 300px;
    }

    .columnImage {
        float: left;
        width: 80%;
        padding: 10px;
    }

        .columnImage img {
            margin-left: 40px;
            margin-top: 20px;
        }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }
</style>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

<!-- At first I put these two divs inside or after <table> does not work because In the html tables, <table> tag expect <tr> tag right after itself and <tr> tag expect <td> tag right after itself -->
<div class="row">
    <div class="column" style="background-color:#aaa;">
        <!-- Grid images here-->

    </div>
    <div class="column" style="background-color:#bbb;">
        <div>
            <table class="table">
                <tr>
                    <th>
                        <h4>Model</h4>
                    </th>
                    <th>
                        <h4>Price</h4>
                    </th>
                    <th>
                        <h4>Brand</h4>
                    </th>
                    <th>
                        <h4>Category</h4>
                    </th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Model)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.BrandName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category)
                        </td>
                        @*<td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.MotorcycleId }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Motorcycle.MotorcycleId }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Motorcycle.MotorcycleId })
                        </td>*@
                    </tr>
                }
            </table>
        </div>
    </div>
</div>
<script>
    function myFunction() {
        var x = document.getElementById("myDIV");
        if (x.style.display === "none") {
            x.style.display = "block";
        } else {
            x.style.display = "none";
        }
    }
</script>
